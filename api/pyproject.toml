[tool.poetry]
name = "users service"
version = "0.1.0"
description = "To be done."
authors = ["Martyna Witkowska <mar.witkowska@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
django = "4.2.17"
psycopg = "3.2.3"
dj-database-url = "2.3.0"
djangorestframework = "3.15.2"
djangorestframework-simplejwt = "5.4.0"
drf-spectacular = "0.28.0"
pytest-django = "4.9.0"
pytest-cov = "6.0.0"
freezegun = "1.5.1"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["test_*.py", "conftest_*.py"]

minversion = "6.0"
testpaths = [
    "*/tests",
    "conftest"
]

addopts = [
    "-ra -q",
   "--cov=.",
   "--cov-report",
   "term-missing:skip-covered",
   "--cov-fail-under=80"
]

[tool.coverage.run]
omit = [
   "*/tests/*.py",
    "*/migrations/*",
    "config/*",
    "manage.py"
]


[tool.poetry.group.dev.dependencies]
ruff = "0.8.6"

[tool.ruff]
include = ["pyproject.toml", "**/*.py"]
exclude = ["**/migrations"]
target-version = "py313"
line-length = 120

[tool.ruff.lint]
select = ["A", "B", "C4", "E", "W", "F", "I", "DJ", "INP", "TID", "UP", "YTT"]
fixable = ["A", "B", "C4", "E", "W", "F", "I", "TID", "UP"]
ignore = ["W191"]

[tool.ruff.format]
quote-style = "single"
indent-style="tab"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
